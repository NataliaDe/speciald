<script>
    $("#map_see_button").click(function () {


        if ($("#panel_map").hasClass('open_panel')) {
            $("#panel_map").removeClass('open_panel');
            $("#panel_map").addClass('close_panel');
            $("#map-div").hide();
            $("#map_see_button").show();
        } else {
            $("#panel_map").removeClass('close_panel');
            $("#panel_map").addClass('open_panel');
            $("#map-div").show();
            //$( "#theme_panel_button" ).show();
        }



    });




    /* types of layers */
    var internetlayer =
            L.tileLayer('http://tiles.maps.sputnik.ru/{z}/{x}/{y}.png', {id: 'map',
                maxZoom: 15,
                minZoom: 6
            });

    baselayer =
            L.tileLayer('http://172.26.200.45/tile/map/{x}/{y}/{z}.png', {id: 'map',
                maxZoom: 14,
                minZoom: 6
            });




        var baseMaps = {
        "Интернет-карта": internetlayer,
        "Базовая карта": baselayer,
        //      "Yandex карта (спутник)": yandexlayerSatellite,
        // "Yandex карта (дороги)": yandexlayerRoad
    };

var center_lat=53.900000;
var center_lon=27.566670;
    {%if map_center is defined and map_center is not empty%}
 center_lat={{map_center.lat}};
 center_lon={{map_center.lon}};
    {%endif%}

        var map = L.map('map').setView([center_lat, center_lon], 17);

    {#var map = L.map('map').setView([53.900000, 27.566670], 17);#}


   {# var map = L.map('map', {attributionControl: false,
        layers: [internetlayer]
    });
    map.setView([53.900000, 27.566670], 17);
    L.control.layers(baseMaps).addTo(map);


    var internetMaps = {
        "<span style='color: gray'>Интернет-карта</span>": internetlayer,
        "Базовая карта": baselayer
    };#}





    var geocoder = L.Control.Geocoder.nominatim();
    if (URLSearchParams && location.search) {
        // parse /?geocoder=nominatim from URL
        var params = new URLSearchParams(location.search);
        var geocoderString = params.get('geocoder');
        if (geocoderString && L.Control.Geocoder[geocoderString]) {
            console.log('Using geocoder', geocoderString);
            geocoder = L.Control.Geocoder[geocoderString]();
        } else if (geocoderString) {
            console.warn('Unsupported geocoder', geocoderString);
        }
    }

    var control = L.Control.geocoder({
        geocoder: geocoder
    }).addTo(map);
    var marker;

    //var geocodeService = L.esri.Geocoding.geocodeService();

    //'http://tiles.maps.sputnik.ru/{z}/{x}/{y}.png'

    L.tileLayer('https://{s}.tile.osm.org/{z}/{x}/{y}.png', {
        attribution: '&copy; <a href="https://osm.org/copyright">OpenStreetMap</a> contributors',
        minZoom: 6
    }).addTo(map);


    var xlng = 0.000256;
    var xlat = 0.000200;
    var selectedPoint = [];
    var searchPoint = [];
    var marker_a = [];


    map.on('click', function (e) {

        if (searchPoint !== undefined) {
            map.removeLayer(searchPoint);
        }

        var coord = e.latlng;
        var lat = coord.lat;
        var lng = coord.lng;
        console.log("You clicked the map at latitude: " + lat + " and longitude: " + lng);

        searchPoint = L.marker(e.latlng).addTo(map);


        var a = lat.toString();
        var b = lng.toString();


        $('#lat_id').val(a.substr(0, 9));
        $('#long_id').val(b.substr(0, 9));
        $('#lat_id').change();

        if (a && b) {
            //$('#check-error-coord').css('display', 'none');
            //$('#check-set-coord').css('display','inline');
            $('.coords').css('border', '2px solid #00a65a');
            toastr.success('Выбранные координаты установлены', 'Инфо', {progressBar: true, timeOut: 2500});
        } else {
            // $('#check-set-coord').css('display', 'none');
            // $('#check-error-coord').css('display', 'inline');
        }

    });


    {%if rig is defined and rig.latitude is defined and rig.latitude is not empty and rig.latitude != 0 and rig.longitude is defined and rig.longitude is not empty and rig.longitude != 0%}
        setCoordToMap({{rig.latitude}}, {{rig.longitude}});
    {%elseif is_edit_dones is defined and is_edit_dones == 1 and dones is defined and dones.latitude is not empty and dones.longitude is not empty %}
        setCoordToMap({{dones.latitude}}, {{dones.longitude}});
    {%endif%}




        function setCoordToMap(lat, lon) {

            if (searchPoint !== undefined) {
                map.removeLayer(searchPoint);
            }
            var s = searchPoint = L.marker([lat, lon]).addTo(map);

            /* centered */
            map.setView([lat, lon], 17);


            //$('.coords').css('border', '2px solid #00a65a');
        }

</script>