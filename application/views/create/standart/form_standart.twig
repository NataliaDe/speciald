{% extends 'layout.twig' %}

{% block title %}{{title}}{% endblock %}

{% block content %}

    {%include '/parts/bread_crumb.twig'%}
    <br> <br>
    <!-- content -->

    <form role="form" id="createStandart" method="POST" action="{{base_url('/dones/standart_save')}}" enctype=multipart/form-data>
        {#<div class="container">#}

        {%if is_edit_dones is defined and dones is defined and dones.is_see == 1  %}

            <fieldset disabled>
            {%endif%}

            <input type="hidden" name="type_sd" value="{{type_sd}}">

            <input type="hidden" name="settings_accordion" value="{%if settings_accordion is defined and settings_accordion.value is not empty%}{{settings_accordion.value}}{%endif%}">

            {%include '/create/dones_header_block.twig'%}

            <div class="accordion">
                <dl>
                    <dt class="dt-class">
                        <a  href="#accordion1" aria-expanded="{%if settings_accordion is not defined or settings_accordion.value is empty or ('accordion1' not in settings_accordion.value|split(","))%}true{%else%} false{%endif%}" aria-controls="accordion1" class="accordion-title accordionTitle js-accordionTrigger custom-a {%if settings_accordion is not defined or settings_accordion.value is empty or ('accordion1' not in settings_accordion.value|split(","))%}is-collapsed is-expanded{%endif%}  accordion-a-official" >Специальная служебная информация</a>
                    </dt>
                    <dd class="accordion-content accordionItem {%if settings_accordion is not defined or settings_accordion.value is empty or ('accordion1' not in settings_accordion.value|split(","))%}is-expanded animateIn{%else%}is-collapsed{%endif%}  accordion-content-official" id="accordion1" aria-hidden="{%if settings_accordion is not defined or settings_accordion.value is empty or ('accordion1' not in settings_accordion.value|split(","))%}false{%else%} true{%endif%}">
                        {%include '/create/standart/official_block.twig'%}
                    </dd>



                    <dt class="dt-class">
                        <a style="background-color:#428bca; color: white;border-color: #428bca; " href="#accordion6" aria-expanded="{%if settings_accordion is not defined or settings_accordion.value is empty or ('accordion6' not in settings_accordion.value|split(","))%}true{%else%} false{%endif%}" aria-controls="accordion6" class="accordion-title accordionTitle js-accordionTrigger custom-a {%if settings_accordion is not defined or settings_accordion.value is empty or ('accordion6' not in settings_accordion.value|split(","))%}is-collapsed is-expanded{%endif%}">
                            Данные по собственнику (принадлежность)
                        </a>
                    </dt>
                    <dd class="accordion-content accordionItem {%if settings_accordion is not defined or settings_accordion.value is empty or ('accordion6' not in settings_accordion.value|split(","))%}is-expanded animateIn{%else%}is-collapsed{%endif%}" id="accordion6" aria-hidden="{%if settings_accordion is not defined or settings_accordion.value is empty or ('accordion6' not in settings_accordion.value|split(","))%}false{%else%} true{%endif%}">
                        {%include '/create/standart/people_block.twig'%}
                    </dd>



                    {#                    <dt class="dt-class">
                                            <a style="background-color:#428bca; color: white;border-color: #428bca; " href="#accordion2" aria-expanded="{%if settings_accordion is not defined or settings_accordion.value is empty or ('accordion2' not in settings_accordion.value|split(","))%}true{%else%} false{%endif%}" aria-controls="accordion2" class="accordion-title accordionTitle js-accordionTrigger custom-a {%if settings_accordion is not defined or settings_accordion.value is empty or ('accordion2' not in settings_accordion.value|split(","))%}is-collapsed is-expanded{%endif%} ">
                                                Начальный текст (ручной набор данных)</a>
                                        </dt>
                                        <dd class="accordion-content accordionItem {%if settings_accordion is not defined or settings_accordion.value is empty or ('accordion2' not in settings_accordion.value|split(","))%}is-expanded animateIn{%else%}is-collapsed{%endif%}" id="accordion2" aria-hidden="{%if settings_accordion is not defined or settings_accordion.value is empty or ('accordion2' not in settings_accordion.value|split(","))%}false{%else%} true{%endif%}">
                                            {%include '/create/standart/opening_block.twig'%}
                                        </dd>#}

                    <dt class="dt-class">
                        <a style="background-color:#428bca; color: white;border-color: #428bca; " href="#accordion3" aria-expanded="{%if settings_accordion is not defined or settings_accordion.value is empty or ('accordion3' not in settings_accordion.value|split(","))%}true{%else%} false{%endif%}" aria-controls="accordion3" class="accordion-title accordionTitle js-accordionTrigger custom-a {%if settings_accordion is not defined or settings_accordion.value is empty or ('accordion3' not in settings_accordion.value|split(","))%}is-collapsed is-expanded{%endif%} ">
                            Описание выезда и базовые таблицы
                        </a>
                    </dt>
                    <dd class="accordion-content accordionItem {%if settings_accordion is not defined or settings_accordion.value is empty or ('accordion3' not in settings_accordion.value|split(","))%}is-expanded animateIn{%else%}is-collapsed{%endif%}" id="accordion3"  aria-hidden="{%if settings_accordion is not defined or settings_accordion.value is empty or ('accordion3' not in settings_accordion.value|split(","))%}false{%else%} true{%endif%}">

                        <div  id="middle-block-div">
                            {%include '/create/standart/middle_block.twig'%}
                        </div>

                        <div  id="silymchs-block-div">
                            {%include '/create/standart/middle-block/silymchs.twig'%}
                        </div>

                        <br>

                        <div  id="innerservice-block-div">
                            {%include '/create/standart/middle-block/innerservice.twig'%}
                        </div>

                        <br>

                        <div  id="informing-block-div">
                            {%include '/create/standart/middle-block/informing.twig'%}
                        </div>

                        <br>
                        <div  id="trunks_data-block-div">
                            {%include '/create/standart/middle-block/trunks.twig'%}
                        </div>

                        <br>
                        <div  id="str-block-div">
                            {%include '/create/standart/middle-block/str.twig'%}
                        </div>

                        <br>
                        <div  id="gdzs_data-block-div">
                            {%include '/create/standart/middle-block/gdzs.twig'%}
                        </div>


                        {#                    <div  id="additional_data-block-div">
                                                {%include '/create/standart/middle-block/additional_data.twig'%}
                                            </div>
                                            <br>#}

                    </dd>





                    {#{%if settings is defined and settings.is_situation_first_arrival is defined and 'yes' in settings.is_situation_first_arrival %}#}

                        <dt class="dt-class">
                            <a style="background-color:#428bca; color: white;border-color: #428bca; " href="#accordion_situation_first_arrival" aria-expanded="{%if settings_accordion is not defined or settings_accordion.value is empty or ('accordion_situation_first_arrival' not in settings_accordion.value|split(","))%}true{%else%} false{%endif%}" aria-controls="accordion_situation_first_arrival" class="accordion-title accordionTitle js-accordionTrigger custom-a {%if settings_accordion is not defined or settings_accordion.value is empty or ('accordion_situation_first_arrival' not in settings_accordion.value|split(","))%}is-collapsed is-expanded{%endif%}">
                                Обстановка на момент прибытия первого подразделения
                            </a>
                        </dt>
                        <dd class="accordion-content accordionItem {%if settings_accordion is not defined or settings_accordion.value is empty or ('accordion_situation_first_arrival' not in settings_accordion.value|split(","))%}is-expanded animateIn{%else%}is-collapsed{%endif%}" id="accordion_situation_first_arrival" aria-hidden="{%if settings_accordion is not defined or settings_accordion.value is empty or ('accordion_situation_first_arrival' not in settings_accordion.value|split(","))%}false{%else%} true{%endif%}">
                            {%include '/create/standart/accordion_situation_first_arrival.twig'%}
                        </dd>

                    {#{%endif%}#}



                    <dt class="dt-class">
                        <a style="background-color:#428bca; color: white;border-color: #428bca; " href="#accordion5" aria-expanded="{%if settings_accordion is not defined or settings_accordion.value is empty or ('accordion5' not in settings_accordion.value|split(","))%}true{%else%} false{%endif%}" aria-controls="accordion5" class="accordion-title accordionTitle js-accordionTrigger custom-a {%if settings_accordion is not defined or settings_accordion.value is empty or ('accordion5' not in settings_accordion.value|split(","))%}is-collapsed is-expanded{%endif%}">
                            Объект
                        </a>
                    </dt>
                    <dd class="accordion-content accordionItem {%if settings_accordion is not defined or settings_accordion.value is empty or ('accordion5' not in settings_accordion.value|split(","))%}is-expanded animateIn{%else%}is-collapsed{%endif%}" id="accordion5" aria-hidden="{%if settings_accordion is not defined or settings_accordion.value is empty or ('accordion5' not in settings_accordion.value|split(","))%}false{%else%} true{%endif%}">
                        {%include '/create/standart/object_block.twig'%}
                    </dd>


                    <dt class="dt-class">
                        <a style="background-color:#428bca; color: white;border-color: #428bca; " href="#accordion4" aria-expanded="{%if settings_accordion is not defined or settings_accordion.value is empty or ('accordion4' not in settings_accordion.value|split(","))%}true{%else%} false{%endif%}" aria-controls="accordion4" class="accordion-title accordionTitle js-accordionTrigger custom-a {%if settings_accordion is not defined or settings_accordion.value is empty or ('accordion4' not in settings_accordion.value|split(","))%}is-collapsed is-expanded{%endif%}">
                            Финальный текст (ручной набор данных)
                        </a>
                    </dt>
                    <dd class="accordion-content accordionItem {%if settings_accordion is not defined or settings_accordion.value is empty or ('accordion4' not in settings_accordion.value|split(","))%}is-expanded animateIn{%else%}is-collapsed{%endif%}" id="accordion4" aria-hidden="{%if settings_accordion is not defined or settings_accordion.value is empty or ('accordion4' not in settings_accordion.value|split(","))%}false{%else%} true{%endif%}">
                        {%include '/create/standart/final_block.twig'%}
                    </dd>


                    {#                    <dt class="dt-class">
                                            <a style="background-color:#428bca; color: white;border-color: #428bca; " href="#accordion_media" aria-expanded="false" aria-controls="accordion_media" class="accordion-title accordionTitle js-accordionTrigger custom-a is-collapsed is-expanded">
                                                Медиа
                                            </a>
                                        </dt>
                                        <dd class="accordion-content accordionItem is-expanded animateIn" id="accordion_media" aria-hidden="false">
                                            {%include '/create/standart/media_block.twig'%}
                                        </dd>#}



                    <dt class="dt-class" style="position: relative;z-index: 100;">
                        <a style="background-color:#428bca; color: white;border-color: #428bca; " href="#accordion7" aria-controls="accordion7"  aria-expanded="{%if settings_accordion is not defined or settings_accordion.value is empty or ('accordion7' not in settings_accordion.value|split(","))%}true{%else%} false{%endif%}" class="accordion-title accordionTitle js-accordionTrigger custom-a {%if settings_accordion is not defined or settings_accordion.value is empty or ('accordion7' not in settings_accordion.value|split(","))%}is-collapsed is-expanded{%endif%}">
                            Сведения о надзорной и профилактической деятельности
                        </a>
                    </dt>
                    <dd class="accordion-content accordionItem {%if settings_accordion is not defined or settings_accordion.value is empty or ('accordion7' not in settings_accordion.value|split(","))%}is-expanded animateIn{%else%}is-collapsed{%endif%}" id="accordion7" aria-hidden="{%if settings_accordion is not defined or settings_accordion.value is empty or ('accordion7' not in settings_accordion.value|split(","))%}false{%else%} true{%endif%}" style="position: relative;z-index: 500;">
                        {%include '/create/standart/prevention_block.twig'%}

                    </dd>



                </dl>



            </div>



            <div class="form-group col-md-12">
                <label for="is_test_sd" >&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</label>
                <div class="checkbox checkbox-danger">
                    <input  type="checkbox" name="is_test_sd" value="1" id="is_test_sd" {%if is_edit_dones is defined and is_edit_dones == 1 and dones is defined and dones.is_test_sd == 1 %}checked{%endif%}>
                    <label for="is_test_sd" style="color:red">
                        Тестовое СД. После окончания тестирования ПС можно удалить.
                    </label>
                </div>
            </div>


            {%if settings is defined and settings.mode_load_media is defined and 'wide' in settings.mode_load_media%}
                {%include '/create/standart/modals/modal-media-multi.twig'%}

            {%else%}
                {%include '/create/standart/modals/modal-media.twig'%}
            {%endif%}



            {%include '/create/standart/preview/opening_description.twig'%}


            {%include '/create/standart/preview/situation_fa.twig'%}


            {%if settings is defined and settings.is_map is defined and 'yes' %}
                {%include '/create/standart/parts/map.twig'%}
            {%endif%}






            <center>


                {%if  dones.is_see == 1  %}

                {%else%}
                    <button type="submit" class="btn btn-danger">Сохранить</button>
                    <a href="{{base_url('/creator/catalog')}}"><button type="button" class="btn btn-secondary" >Отмена</button></a>
                {%endif%}

            </center>

            {#                    <div class="form-row create-form-row ">


                                    <div class="form-group col-md-4" >

                                    </div>

                                    <div class="form-group col-md-1" >
                                        <button type="submit" class="btn btn-danger">Сохранить</button>
                                    </div>


                                   <div class="form-group col-md-2">
                                        <button type="submit" class="btn btn-primary">Сформировать для Microsoft Word &raquo;</button>
                                    </div>

                                </div>#}


            {# </div>#}
            {%if is_edit_dones is defined and dones is defined and dones.is_see == 1  %}

            </fieldset>
        {%endif%}

        {%if is_edit_dones is defined and dones is defined and dones.is_see == 1  %}
            <center>
                <a href="{{base_url('/creator/catalog')}}"><button type="button" class="btn btn-secondary" >Отмена</button></a>
            </center>
        {%endif%}

    </form>

    <a href="#" data-toggle="modal" data-target="#show-error" class="hide" id="a-show-error"></a>
    <a href="#" data-toggle="modal" data-target="#show-warning" class="hide" id="a-show-warning"></a>
    <a href="#" data-toggle="modal" data-target="#play_end_timer_time_msg" class="hide" id="a-play-end-timer"></a>
    <!-- .content -->

    <audio id="myAudio">
        <source src="{{base_url('/assets/audio_timer/end_timer_time_msg.mp3')}}" type="audio/mpeg">

    </audio>

    {#<button onclick="playAudio();" type="button">Play Audio</button>
    <button onclick="pauseAudio();" type="button">Pause Audio</button>#}




    {%include 'create/standart/modals/modal-search-rig.twig'%}
    {%include 'create/standart/modals/modal-search-str-cars.twig'%}
    {%include 'create/standart/modals/modal-search-str-inf.twig'%}

    {%include 'create/standart/modals/modal-add-new-work-innerservice.twig'%}
    {%include 'create/standart/modals/modal-add-new-vid-object-house.twig'%}
    {%include 'create/standart/modals/modal-add-new-vid-object-material.twig'%}
    {%include 'create/standart/modals/modal-add-new-vid-object-roof.twig'%}
    {%include 'create/standart/modals/modal-add-new-vid-people-status.twig'%}
    {%include 'create/standart/modals/modal-add-new-vid-type-water-source.twig'%}

    {%include '/create/standart/modals/modal-str-refresh.twig'%}
    {%include '/create/standart/modals/modal-dolj-add.twig'%}
    {%include 'create/standart/modals/modal-add-new-vid-situation-fa.twig'%}
    {%include '/create/modals/modals.twig'%}





{% endblock %}




{% block head %}
    <link rel="stylesheet" href="{{ base_url('/assets/accordion/style.css') }}">
    <link rel="stylesheet" href="{{ base_url('/assets/css/sb-admin-2.css') }}">

    <link rel="stylesheet" href="{{ base_url('/assets/css/checkbox_new.css') }}">

    <link rel="stylesheet" href="{{ base_url('/assets/css/timer.css') }}?{{now|date('H:i:s')}}">
    <link rel="stylesheet" href="{{ base_url('/assets/css/timer_time_msg.css') }}?{{now|date('H:i:s')}}">

    <link rel="stylesheet" href="{{ base_url('/assets/css/media.css') }}?{{now|date('H:i:s')}}">



    {#<link rel="stylesheet" href="{{ base_url('assets/js/dd/css/bootstrap-datetimepicker.min.css') }}">#}

    <link href="{{ base_url('/assets/daterangepicker/daterangepicker.css') }}" rel="stylesheet">



    <link rel="stylesheet" href="{{ base_url('assets/datatables/jquery.dataTables.css') }}">

    <link rel="stylesheet" href="{{ base_url('/assets/css/preview_standart.css') }}">


    {%if settings is defined and settings.is_map is defined and 'yes' %}
        <link rel="stylesheet" href="{{ base_url('/assets/libs/leaflet-control-geocoder-master/dist/leaflet.css') }}" />
        <link rel="stylesheet" href="{{ base_url('/assets/libs/leaflet-control-geocoder-master/dist/Control.Geocoder.css') }}" />
        <link rel="stylesheet" href="{{ base_url('/assets/css/form-standart/map.css') }}?{{now|date('H:i:s')}}">

    {%endif%}


    <style>
        #lat_id:before {
            content: "широта";
        }

        #search-rig{
            cursor: pointer;
        }


        #modal-search-rig .select2-container {
            width: 168px !important;
        }

        {#        #modal-search-str-cars .select2-container {
                    width: 290px !important;
                }#}
        #modal-search-str-cars .select-cars-region-cls .select2-container {
            width: 227px !important;
        }
        #modal-search-str-cars .select-cars-locals-cls .select2-container {
            width: 282px !important;
        }

        #modal-search-str-cars .select-cars-pasp-cls .select2-container {
            width: 500px !important;
        }

        #modal-search-str-cars .select-cars-cls .select2-container {
            width: 500px !important;
        }


        {#        #modal-search-str-inf  .select2-container {
                    width: 350px !important;
                }#}
        #modal-search-str-inf .select-pasp-cls .select2-container {
            width: 500px !important;
        }
        #modal-search-str-inf .select-regions-cls .select2-container {
            width: 227px !important;
        }
        #modal-search-str-inf .select-locals-cls .select2-container {
            width: 282px !important;
        }



        #innerservice-table .select2-container {
            width: 300px !important;
        }

        #innerservice-table .td_innerservice_name .select2-container {
            width: 300px !important;
        }
        #water-source-table .td_water-source-type .select2-container {
            width: 290px !important;
        }


        #law_face_office_belong .select2-container, #individual-face-div .select2-container  {
            width: 240px !important;
        }

        #object-api-card .select2-container{
            width: 312px !important;
        }


        #object-api-card .select2-container{
            width: 312px !important;
        }

        #object-material-div .select2-container, #object-roof-div .select2-container{
            width: 299px !important;
        }
        #avtotransport-object .select2-container{
            width: 267px !important;
        }


        .theme-msg .select2-container{
            width: 470px !important;
        }

        #modal-list-disp .select2-container {
            width: 400px !important;
        }


        {#       #div-silymchs table {
                    counter-reset: row-num;
                }
               #div-silymchs table tr {
                    counter-increment: row-num;
                }
               #div-silymchs table tr td:first-child::before {
                    content: counter(row-num);
                }#}


        {#        .select2-results .select2-results__option[aria-disabled=true] {
                    display: none;
                }#}


        .mark_trunks, .actions_ls_trunks{
            width: 243px;
            {#margin-right: -90px;#}
        }


       #div-sit-fa .select2-container {
            width: 605px !important;
       }

       #div-rig-num-rtp .select2-container {
           width: 145px !important;
       }
    </style>

{% endblock %}

{% block footer %}


    <img src="{{ base_url('/assets/images/updown/32.ico')}}" alt="Наверх" title="Наверх" id="Go_Top"
         style="position: fixed; bottom: 60px; right: 2px; cursor: pointer; width: 36px;z-index: 1000;    border: solid 1px #254aa2;
         margin-top: 0px;
         padding-top: 3px;
         padding-bottom: 0px;">

    <img src="{{ base_url('/assets/images/updown/35.ico')}}" alt="Вниз" title="Вниз" id="Go_Bottom"
         style="position: fixed; bottom: 20px; right: 2px; cursor: pointer; width: 36px; z-index: 1000;    border: solid 1px #254aa2;
         margin-top: 0px;
         padding-top: 3px;
         padding-bottom: 0px;">




    <script src="{{ base_url('/assets/accordion/index.js')}}"></script>
    <script type="text/javascript" src="{{ base_url('assets/js/jquery.downCount.js') }}"></script>

    <script src="{{ base_url('/assets/js/mask/jquery.maskedinput.min.js')}}"></script>





    <script type="text/javascript"
    src="{{ base_url('assets/daterangepicker/moment.min.js') }}"></script>
    <script type="text/javascript"
    src="{{ base_url('assets/daterangepicker/daterangepicker.js') }}"></script>

    {#<script src="{{ base_url('/assets/js/dd/moment.min.js')}}"></script>#}

    {#<script src="{{ base_url('/assets/js/dd/locale/ru.js')}}"></script>#}
    {#    <script src="{{ base_url('/assets/js/dd/js/bootstrap-datetimepicker.min.js')}}"></script>#}
    <script src="{{ base_url('/assets/js/manual_datetimepicker.js')}}?{{now|date('H:i:s')}}"></script>
    <script src="{{ base_url('/assets/js/name.js')}}"></script>



    <script src="{{ base_url('/assets/js/form-standart/journal_table.js')}}?{{now|date('H:i:s')}}"></script>
    <script src="{{ base_url('/assets/js/form-standart/str_table.js')}}?{{now|date('H:i:s')}}"></script>
    <script src="{{ base_url('/assets/js/form-standart/final_block.js')}}?{{now|date('H:i:s')}}"></script>

    <script src="{{ base_url('/assets/js/form-standart/search_rig.js')}}?{{now|date('H:i:s')}}"></script>
    <script src="{{ base_url('/assets/js/form-standart/search_str_cars.js')}}?{{now|date('H:i:s')}}"></script>
    <script src="{{ base_url('/assets/js/form-standart/search_str_inf.js')}}?{{now|date('H:i:s')}}"></script>

    <script src="{{ base_url('/assets/datatables/jquery.dataTables.js')}}"></script>



    <script src="{{ base_url('/assets/js/form-standart/media_multi.js')}}?{{now|date('H:i:s')}}"></script>
    <script src="{{ base_url('/assets/js/form-standart/media.js')}}?{{now|date('H:i:s')}}"></script>




    {#<script src="{{ base_url('/assets/js/form-standart/preview_standart.js')}}?{{now|date('H:i:s')}}"></script>#}

    {%include '/create/standart/owner/actions_js.twig'%}
    {%include '/create/standart/preview_standart.twig'%}
    {%include '/create/standart/preview_situation_fa.twig'%}

    {%if is_edit_dones is not defined  %}
        <script src="{{ base_url('/assets/js/timer.js')}}"></script>

    {%endif%}
    <script src="{{ base_url('/assets/js/timer_time_msg.js')}}"></script>




    {%if settings is defined and settings.is_map is defined and 'yes' %}
        <script src="{{ base_url('/assets/libs/leaflet-control-geocoder-master/dist/leaflet-src.js')}}"></script>
        <script src="{{ base_url('/assets/libs/leaflet-control-geocoder-master/dist/Control.Geocoder.js')}}"></script>

        <script src="{{ base_url('/assets/libs/leaflet-control-geocoder-master/esri-leaflet.js')}}"
                integrity="sha512-6LVib9wGnqVKIClCduEwsCub7iauLXpwrd5njR2J507m3A2a4HXJDLMiSZzjcksag3UluIfuW1KzuWVI5n/cuQ=="
        crossorigin=""></script>

        {%include '/create/standart/parts/map_js.twig'%}

    {%endif%}





    <script>

        var id_owner_dead ={{id_owner_dead}} ;

        {% if rig is defined%}
            setPreviewData();
        {%endif%}


            jQuery(function () {
                $("#Go_Top").hide();
                if ($(window).scrollTop() >= 250)
                    $("#Go_Top").fadeIn("slow")
                $(window).scroll(function () {
                    if ($(window).scrollTop() <= 250)
                        $("#Go_Top").fadeOut("slow")
                    else
                        $("#Go_Top").fadeIn("slow")
                });
                $("#Go_Bottom").hide();
                if ($(window).scrollTop() <= $(document).height() - 999)
                    $("#Go_Bottom").fadeIn("slow")
                $(window).scroll(function () {
                    if ($(window).scrollTop() >= $(document).height() - 999)
                        $("#Go_Bottom").fadeOut("slow")
                    else
                        $("#Go_Bottom").fadeIn("slow")
                });
                $("#Go_Top").click(function () {
                    $("html, body").animate({scrollTop: 0}, "slow")
                })
                $("#Go_Bottom").click(function () {
                    $("html, body").animate({scrollTop: $(document).height()}, "slow")
                })
            });
            jQuery("#lat_id").mask("99.999999"); //долгота
            jQuery("#long_id").mask("99.999999"); //широта

            $(document).ready(function () {

                jQuery("#vid_hs_2").chained("#vid_hs_1");
            });
    </script>


    <script>




        /* add Add Work Innerservice to bd */
        function AddWorkInnerservice() {//add in modal
            $.ajax({
                dataType: "json",
                url: '{{ base_url('/dones/add_work_innerservice_ajax')}}',
                method: 'POST',
                data: {
                    name: $('#modal-add-new-work-innerservice').find('#new_name_work_innerservice').val()
                }
            }).done(function (data) {

                if (data.is_success === 1) {
                    $('.work_innerservice').append('<option value="' + data.id + '">' + data.work_name + '</option>');
                    $('.work_innerservice ').trigger("change");
                    $('#name_work_innerservice_for_edit').append('<option value="' + data.id + '">' + data.work_name + '</option>');
                    $('#name_work_innerservice_for_edit').trigger("change");
                    $('#name_work_innerservice_for_delete').append('<option value="' + data.id + '">' + data.work_name + '</option>');
                    $('#name_work_innerservice_for_delete').trigger("change");
                    $('#new_name_work_innerservice').val('');
                    $('.md-close').click();
                    toastr.success(data.message, 'Успех:', {timeOut: 5000});
                } else {
                    toastr.warning(data.message, 'Внимание:', {timeOut: 5000});
                }
            });
        }

        /* edit Work Innerservice to bd */
        function EditWorkInnerservice() {//edit in modal

            var id_edit = $('#modal-add-new-work-innerservice').find('#name_work_innerservice_for_edit').val();
            $.ajax({
                dataType: "json",
                url: '{{ base_url('/dones/edit_work_innerservice_ajax')}}',
                method: 'POST',
                data: {
                    name: $('#modal-add-new-work-innerservice').find('#edit_name_work_innerservice').val(),
                    id_edit: id_edit
                }
            }).done(function (data) {

                if (data.is_success === 1) {

                    /*  set data*/
                    $('#name_work_innerservice_for_edit option[value=' + id_edit + ']').text(data.work_name); //select edit
                    $('#name_work_innerservice_for_delete option[value=' + id_edit + ']').text(data.work_name); //select delete
                    $('.work_innerservice option[value=' + id_edit + ']').text(data.work_name); //select on form


                    /* refresh update select */
                    $('#name_work_innerservice_for_edit').select2('destroy');
                    $('#name_work_innerservice_for_edit').select2();
                    $('#name_work_innerservice_for_edit').trigger("change"); //select edit


                    /* refresh delete select */
                    $('#name_work_innerservice_for_delete').select2('destroy');
                    $('#name_work_innerservice_for_delete').select2();
                    $('#name_work_innerservice_for_delete').trigger("change");
                    /* refresh select on form */
                    $('.work_innerservice').select2('destroy');
                    $('.work_innerservice').select2({
                        placeholder: "Выберите из списка",
                        allowClear: true,
                        "language": {
                            "noResults": function () {
                                return "Ничего не найдено";
                            }
                        }
                    });
                    $('.work_innerservice').trigger("change"); // on form


                    $('#edit_name_work_innerservice').val('');
                    $('.md-close').click();
                    toastr.success(data.message, 'Успех:', {timeOut: 5000});
                } else {
                    toastr.warning(data.message, 'Внимание:', {timeOut: 5000});
                }
            });
        }




        /* delete work innerservice from bd */
        function deleteWorkInnerservice() {//delete in modal

            var id = $('#name_work_innerservice_for_delete option:selected').val();
            $.ajax({
                dataType: "json",
                url: '{{ base_url('/dones/delete_work_innerservice_ajax')}}',
                method: 'POST',
                data: {
                    id: id
                }
            });
            $('.work_innerservice option[value=' + id + ']').remove();
            $('#name_work_innerservice_for_edit option[value=' + id + ']').remove(); //edit select
            $('#name_work_innerservice_for_delete option[value=' + id + ']').remove();
            toastr.success('Тип был удален из БД', 'Info:', {timeOut: 5000});
            /* refresh update select */
            //$('#name_work_innerservice_for_edit').select2('destroy');
            //$('#name_work_innerservice_for_edit').select2();
            $('#name_work_innerservice_for_edit').trigger("change"); //select edit


            /* refresh delete select */
            //$('#name_work_innerservice_for_delete').select2('destroy');
            //$('#name_work_innerservice_for_delete').select2();
            $('#name_work_innerservice_for_delete').trigger("change");
            /* refresh select on form */
            //$('.work_innerservice').select2('destroy');
            //$('.work_innerservice').select2();
            $('.work_innerservice').trigger("change"); // on form
        }





        /* add Add new vid of house object to bd */
        function AddObjectHouse() {//add in modal
            $.ajax({
                dataType: "json",
                url: '{{ base_url('/dones/add_object_house_ajax')}}',
                method: 'POST',
                data: {
                    name: $('#modal-add-new-vid-object-house').find('#new_object_house').val()
                }
            }).done(function (data) {

                if (data.is_success === 1) {
                    $('#object_house_id').append('<option value="' + data.id + '">' + data.name + '</option>');
                    $('#object_house_id').trigger("change");
                    $('#object_house_for_edit').append('<option value="' + data.id + '">' + data.name + '</option>');
                    $('#object_house_for_edit').trigger("change");
                    $('#object_house_for_delete').append('<option value="' + data.id + '">' + data.name + '</option>');
                    $('#object_house_for_delete').trigger("change");
                    $('#modal-add-new-vid-object-house').find('#new_object_house').val('');
                    $('.md-close').click();
                    toastr.success(data.message, 'Успех:', {timeOut: 5000});
                } else {
                    toastr.warning(data.message, 'Внимание:', {timeOut: 5000});
                }
            });
        }



        /* edit object house vid to bd */
        function EditObjectHouse() {//edit in modal

            var id_edit = $('#modal-add-new-vid-object-house').find('#object_house_for_edit').val();
            $.ajax({
                dataType: "json",
                url: '{{ base_url('/dones/edit_object_house_ajax')}}',
                method: 'POST',
                data: {
                    name: $('#modal-add-new-vid-object-house').find('#new_name_object_house').val(),
                    id_edit: id_edit
                }
            }).done(function (data) {

                if (data.is_success === 1) {

                    /*  set data*/
                    $('#modal-add-new-vid-object-house').find('#object_house_for_edit option[value=' + id_edit + ']').text(data.name); //select edit
                    $('#modal-add-new-vid-object-house').find('#object_house_for_delete option[value=' + id_edit + ']').text(data.name); //select delete
                    $('#object_house_id option[value=' + id_edit + ']').text(data.name); //select on form

                    /* refresh update select */
                    $('#modal-add-new-vid-object-house').find('#object_house_for_edit').select2('destroy');
                    $('#modal-add-new-vid-object-house').find('#object_house_for_edit').select2();
                    /* refresh delete select */
                    $('#modal-add-new-vid-object-house').find('#object_house_for_delete').select2('destroy');
                    $('#modal-add-new-vid-object-house').find('#object_house_for_delete').select2();
                    /* refresh select on form */
                    $('#object_house_id').select2('destroy');
                    $('#object_house_id').select2({
                        placeholder: "Выберите из списка",
                        allowClear: true,
                        "language": {
                            "noResults": function () {
                                return "Ничего не найдено";
                            }
                        }
                    });
                    $('#modal-add-new-vid-object-house').find('#new_name_object_house').val('');
                    $('.md-close').click();
                    toastr.success(data.message, 'Успех:', {timeOut: 5000});
                } else {
                    toastr.warning(data.message, 'Внимание:', {timeOut: 5000});
                }
            });
        }



        /* delete object house vid from bd */
        function deleteObjectHouse() {//delete in modal

            var id = $('#modal-add-new-vid-object-house').find('#object_house_for_delete').val();
            $.ajax({
                dataType: "json",
                url: '{{ base_url('/dones/delete_object_house_ajax')}}',
                method: 'POST',
                data: {
                    id: id
                }
            });
            $('#object_house_id option[value=' + id + ']').remove();
            $('#modal-add-new-vid-object-house').find('#object_house_for_edit option[value=' + id + ']').remove(); //edit select
            $('#modal-add-new-vid-object-house').find('#object_house_for_delete option[value=' + id + ']').remove();
            toastr.success('Тип был удален из БД', 'Info:', {timeOut: 5000});
            /* refresh update select */
            $('#modal-add-new-vid-object-house').find('#object_house_for_edit').trigger("change"); //select edit


            /* refresh delete select */
            $('#modal-add-new-vid-object-house').find('#object_house_for_delete').trigger("change");
            /* refresh select on form */
            $('#object_house_id').trigger("change"); // on form
        }



        /* add Add new vid material of house object to bd */
        function AddObjectMaterial() {//add in modal
            $.ajax({
                dataType: "json",
                url: '{{ base_url('/dones/add_object_material_ajax')}}',
                method: 'POST',
                data: {
                    name: $('#modal-add-new-vid-object-material').find('#new_object_material').val()
                }
            }).done(function (data) {

                if (data.is_success === 1) {
                    $('#object_material_id').append('<option value="' + data.id + '">' + data.name + '</option>');
                    $('#object_material_id').trigger("change");
                    $('#object_material_for_edit').append('<option value="' + data.id + '">' + data.name + '</option>');
                    $('#object_material_for_edit').trigger("change");
                    $('#object_material_for_delete').append('<option value="' + data.id + '">' + data.name + '</option>');
                    $('#object_material_for_delete').trigger("change");
                    $('#modal-add-new-vid-object-material').find('#new_object_material').val('');
                    $('.md-close').click();
                    toastr.success(data.message, 'Успех:', {timeOut: 5000});
                } else {
                    toastr.warning(data.message, 'Внимание:', {timeOut: 5000});
                }
            });
        }


        /* edit object material vid to bd */
        function EditObjectMaterial() {//edit in modal

            var id_edit = $('#modal-add-new-vid-object-material').find('#object_material_for_edit').val();
            $.ajax({
                dataType: "json",
                url: '{{ base_url('/dones/edit_object_material_ajax')}}',
                method: 'POST',
                data: {
                    name: $('#modal-add-new-vid-object-material').find('#new_name_object_material').val(),
                    id_edit: id_edit
                }
            }).done(function (data) {

                if (data.is_success === 1) {

                    /*  set data*/
                    $('#modal-add-new-vid-object-material').find('#object_material_for_edit option[value=' + id_edit + ']').text(data.name); //select edit
                    $('#modal-add-new-vid-object-material').find('#object_material_for_delete option[value=' + id_edit + ']').text(data.name); //select delete
                    $('#object_material_id option[value=' + id_edit + ']').text(data.name); //select on form

                    /* refresh update select */
                    $('#modal-add-new-vid-object-material').find('#object_material_for_edit').select2('destroy');
                    $('#modal-add-new-vid-object-material').find('#object_material_for_edit').select2();
                    /* refresh delete select */
                    $('#modal-add-new-vid-object-material').find('#object_material_for_delete').select2('destroy');
                    $('#modal-add-new-vid-object-material').find('#object_material_for_delete').select2();
                    /* refresh select on form */
                    $('#object_material_id').select2('destroy');
                    $('#object_material_id').select2({
                        placeholder: "Выберите из списка",
                        allowClear: true,
                        "language": {
                            "noResults": function () {
                                return "Ничего не найдено";
                            }
                        }
                    });
                    $('#modal-add-new-vid-object-material').find('#new_name_object_material').val('');
                    $('.md-close').click();
                    toastr.success(data.message, 'Успех:', {timeOut: 5000});
                } else {
                    toastr.warning(data.message, 'Внимание:', {timeOut: 5000});
                }
            });
        }


        /* delete object material vid from bd */
        function deleteObjectMaterial() {//delete in modal

            var id = $('#modal-add-new-vid-object-material').find('#object_material_for_delete').val();
            $.ajax({
                dataType: "json",
                url: '{{ base_url('/dones/delete_object_material_ajax')}}',
                method: 'POST',
                data: {
                    id: id
                }
            });
            $('#object_material_id option[value=' + id + ']').remove();
            $('#modal-add-new-vid-object-material').find('#object_material_for_edit option[value=' + id + ']').remove(); //edit select
            $('#modal-add-new-vid-object-material').find('#object_material_for_delete option[value=' + id + ']').remove();
            toastr.success('Тип был удален из БД', 'Info:', {timeOut: 5000});
            /* refresh update select */
            $('#modal-add-new-vid-object-material').find('#object_material_for_edit').trigger("change"); //select edit


            /* refresh delete select */
            $('#modal-add-new-vid-object-material').find('#object_material_for_delete').trigger("change");
            /* refresh select on form */
            $('#object_material_id').trigger("change"); // on form
        }



        /* add Add new vid roof of house object to bd */
        function AddObjectRoof() {//add in modal
            $.ajax({
                dataType: "json",
                url: '{{ base_url('/dones/add_object_roof_ajax')}}',
                method: 'POST',
                data: {
                    name: $('#modal-add-new-vid-object-roof').find('#new_object_roof').val()
                }
            }).done(function (data) {

                if (data.is_success === 1) {
                    $('#object_roof_id').append('<option value="' + data.id + '">' + data.name + '</option>');
                    $('#object_roof_id').trigger("change");
                    $('#object_roof_for_edit').append('<option value="' + data.id + '">' + data.name + '</option>');
                    $('#object_roof_for_edit').trigger("change");
                    $('#object_roof_for_delete').append('<option value="' + data.id + '">' + data.name + '</option>');
                    $('#object_roof_for_delete').trigger("change");
                    $('#modal-add-new-vid-object-roof').find('#new_object_roof').val('');
                    $('.md-close').click();
                    toastr.success(data.message, 'Успех:', {timeOut: 5000});
                } else {
                    toastr.warning(data.message, 'Внимание:', {timeOut: 5000});
                }
            });
        }



        /* edit object roof vid to bd */
        function EditObjectRoof() {//edit in modal

            var id_edit = $('#modal-add-new-vid-object-roof').find('#object_roof_for_edit').val();
            $.ajax({
                dataType: "json",
                url: '{{ base_url('/dones/edit_object_roof_ajax')}}',
                method: 'POST',
                data: {
                    name: $('#modal-add-new-vid-object-roof').find('#new_name_object_roof').val(),
                    id_edit: id_edit
                }
            }).done(function (data) {

                if (data.is_success === 1) {

                    /*  set data*/
                    $('#modal-add-new-vid-object-roof').find('#object_roof_for_edit option[value=' + id_edit + ']').text(data.name); //select edit
                    $('#modal-add-new-vid-object-roof').find('#object_roof_for_delete option[value=' + id_edit + ']').text(data.name); //select delete
                    $('#object_roof_id option[value=' + id_edit + ']').text(data.name); //select on form

                    /* refresh update select */
                    $('#modal-add-new-vid-object-roof').find('#object_roof_for_edit').select2('destroy');
                    $('#modal-add-new-vid-object-roof').find('#object_roof_for_edit').select2();
                    /* refresh delete select */
                    $('#modal-add-new-vid-object-roof').find('#object_roof_for_delete').select2('destroy');
                    $('#modal-add-new-vid-object-roof').find('#object_roof_for_delete').select2();
                    /* refresh select on form */
                    $('#object_roof_id').select2('destroy');
                    $('#object_roof_id').select2({
                        placeholder: "Выберите из списка",
                        allowClear: true,
                        "language": {
                            "noResults": function () {
                                return "Ничего не найдено";
                            }
                        }
                    });
                    $('#modal-add-new-vid-object-roof').find('#new_name_object_roof').val('');
                    $('.md-close').click();
                    toastr.success(data.message, 'Успех:', {timeOut: 5000});
                } else {
                    toastr.warning(data.message, 'Внимание:', {timeOut: 5000});
                }
            });
        }



        /* delete object roof vid from bd */
        function deleteObjectRoof() {//delete in modal

            var id = $('#modal-add-new-vid-object-roof').find('#object_roof_for_delete').val();
            $.ajax({
                dataType: "json",
                url: '{{ base_url('/dones/delete_object_roof_ajax')}}',
                method: 'POST',
                data: {
                    id: id
                }
            });
            $('#object_roof_id option[value=' + id + ']').remove();
            $('#modal-add-new-vid-object-roof').find('#object_roof_for_edit option[value=' + id + ']').remove(); //edit select
            $('#modal-add-new-vid-object-roof').find('#object_roof_for_delete option[value=' + id + ']').remove();
            toastr.success('Тип был удален из БД', 'Info:', {timeOut: 5000});
            /* refresh update select */
            $('#modal-add-new-vid-object-roof').find('#object_roof_for_edit').trigger("change"); //select edit


            /* refresh delete select */
            $('#modal-add-new-vid-object-roof').find('#object_roof_for_delete').trigger("change");
            /* refresh select on form */
            $('#object_roof_id').trigger("change"); // on form
        }




        /* add Add new vid people status to bd */
        function AddPeopleStatus() {//add in modal
            $.ajax({
                dataType: "json",
                url: '{{ base_url('/dones/add_people_status_ajax')}}',
                method: 'POST',
                data: {
                    name: $('#modal-add-new-vid-people-status').find('#new_people_status').val()
                }
            }).done(function (data) {

                if (data.is_success === 1) {
                    $('#people_status_id').append('<option value="' + data.id + '">' + data.name + '</option>');
                    $('#people_status_id').trigger("change");
                    $('#people_status_for_edit').append('<option value="' + data.id + '">' + data.name + '</option>');
                    $('#people_status_for_edit').trigger("change");
                    $('#people_status_for_delete').append('<option value="' + data.id + '">' + data.name + '</option>');
                    $('#people_status_for_delete').trigger("change");
                    $('#modal-add-new-vid-people-status').find('#new_people_status').val('');
                    $('.md-close').click();
                    toastr.success(data.message, 'Успех:', {timeOut: 5000});
                } else {
                    toastr.warning(data.message, 'Внимание:', {timeOut: 5000});
                }
            });
        }



        /* edit people status vid to bd */
        function EditPeopleStatus() {//edit in modal

            var id_edit = $('#modal-add-new-vid-people-status').find('#people_status_for_edit').val();
            $.ajax({
                dataType: "json",
                url: '{{ base_url('/dones/edit_people_status_ajax')}}',
                method: 'POST',
                data: {
                    name: $('#modal-add-new-vid-people-status').find('#new_name_people_status').val(),
                    id_edit: id_edit
                }
            }).done(function (data) {

                if (data.is_success === 1) {

                    /*  set data*/
                    $('#modal-add-new-vid-people-status').find('#people_status_for_edit option[value=' + id_edit + ']').text(data.name); //select edit
                    $('#modal-add-new-vid-people-status').find('#people_status_for_delete option[value=' + id_edit + ']').text(data.name); //select delete
                    $('#people_status_id option[value=' + id_edit + ']').text(data.name); //select on form

                    /* refresh update select */
                    $('#modal-add-new-vid-people-status').find('#people_status_for_edit').select2('destroy');
                    $('#modal-add-new-vid-people-status').find('#people_status_for_edit').select2();
                    /* refresh delete select */
                    $('#modal-add-new-vid-people-status').find('#people_status_for_delete').select2('destroy');
                    $('#modal-add-new-vid-people-status').find('#people_status_for_delete').select2();
                    /* refresh select on form */
                    $('#people_status_id').select2('destroy');
                    $('#people_status_id').select2({
                        placeholder: "Выберите из списка",
                        allowClear: true,
                        "language": {
                            "noResults": function () {
                                return "Ничего не найдено";
                            }
                        }
                    });
                    $('#modal-add-new-vid-people-status').find('#new_name_people_status').val('');
                    $('.md-close').click();
                    toastr.success(data.message, 'Успех:', {timeOut: 5000});
                } else {
                    toastr.warning(data.message, 'Внимание:', {timeOut: 5000});
                }
            });
        }




        /* delete people status vid from bd */
        function deletePeopleStatus() {//delete in modal

            var id = $('#modal-add-new-vid-people-status').find('#people_status_for_delete').val();
            $.ajax({
                dataType: "json",
                url: '{{ base_url('/dones/delete_people_status_ajax')}}',
                method: 'POST',
                data: {
                    id: id
                }
            });
            $('#people_status_id option[value=' + id + ']').remove();
            $('#modal-add-new-vid-people-status').find('#people_status_for_edit option[value=' + id + ']').remove(); //edit select
            $('#modal-add-new-vid-people-status').find('#people_status_for_delete option[value=' + id + ']').remove();
            toastr.success('Тип был удален из БД', 'Info:', {timeOut: 5000});
            /* refresh update select */
            $('#modal-add-new-vid-people-status').find('#people_status_for_edit').trigger("change"); //select edit


            /* refresh delete select */
            $('#modal-add-new-vid-people-status').find('#people_status_for_delete').trigger("change");
            /* refresh select on form */
            $('#people_status_id').trigger("change"); // on form
        }






        /* add Add new vid water source to bd */
        function AddWaterSource() {//add in modal
            $.ajax({
                dataType: "json",
                url: '{{ base_url('/dones/add_water_source_ajax')}}',
                method: 'POST',
                data: {
                    name: $('#modal-add-new-vid-type-water-source').find('#new_type_water_source').val()
                }
            }).done(function (data) {

                if (data.is_success === 1) {
                    $('#div-water-source #water-source-table .water_source_type').append('<option value="' + data.id + '">' + data.name + '</option>');
                    $('#div-water-source #water-source-table .water_source_type').trigger("change");
                    $('#type_water_source_for_edit').append('<option value="' + data.id + '">' + data.name + '</option>');
                    $('#type_water_source_for_edit').trigger("change");
                    $('#type_water_source_for_delete').append('<option value="' + data.id + '">' + data.name + '</option>');
                    $('#type_water_source_for_delete').trigger("change");
                    $('#modal-add-new-vid-type-water-source').find('#new_type_water_source').val('');
                    $('.md-close').click();
                    toastr.success(data.message, 'Успех:', {timeOut: 5000});
                } else {
                    toastr.warning(data.message, 'Внимание:', {timeOut: 5000});
                }
            });
        }





        /* edit water source vid to bd */
        function EditWaterSource() {//edit in modal

            var id_edit = $('#modal-add-new-vid-type-water-source').find('#type_water_source_for_edit').val();
            $.ajax({
                dataType: "json",
                url: '{{ base_url('/dones/edit_water_source_ajax')}}',
                method: 'POST',
                data: {
                    name: $('#modal-add-new-vid-type-water-source').find('#new_name_type_water_source').val(),
                    id_edit: id_edit
                }
            }).done(function (data) {

                if (data.is_success === 1) {

                    /*  set data*/
                    $('#modal-add-new-vid-type-water-source').find('#type_water_source_for_edit option[value=' + id_edit + ']').text(data.name); //select edit
                    $('#modal-add-new-vid-type-water-source').find('#type_water_source_for_delete option[value=' + id_edit + ']').text(data.name); //select delete
                    $('#div-water-source #water-source-table').find('.water_source_type option[value=' + id_edit + ']').text(data.name); //select on form

                    /* refresh update select */
                    $('#modal-add-new-vid-type-water-source').find('#type_water_source_for_edit').select2('destroy');
                    $('#modal-add-new-vid-type-water-source').find('#type_water_source_for_edit').select2();
                    /* refresh delete select */
                    $('#modal-add-new-vid-type-water-source').find('#type_water_source_for_delete').select2('destroy');
                    $('#modal-add-new-vid-type-water-source').find('#type_water_source_for_delete').select2();
                    /* refresh select on form */
                    $('#div-water-source #water-source-table .water_source_type').select2('destroy');
                    $('#div-water-source #water-source-table .water_source_type').select2({
                        placeholder: "Выберите из списка",
                        allowClear: true,
                        "language": {
                            "noResults": function () {
                                return "Ничего не найдено";
                            }
                        }
                    });
                    $('#modal-add-new-vid-type-water-source').find('#new_name_type_water_source').val('');
                    $('.md-close').click();
                    toastr.success(data.message, 'Успех:', {timeOut: 5000});
                } else {
                    toastr.warning(data.message, 'Внимание:', {timeOut: 5000});
                }
            });
        }





        /* delete water source vid from bd */
        function deleteWaterSource() {//delete in modal

            var id = $('#modal-add-new-vid-type-water-source').find('#type_water_source_for_delete').val();
            $.ajax({
                dataType: "json",
                url: '{{ base_url('/dones/delete_water_source_ajax')}}',
                method: 'POST',
                data: {
                    id: id
                }
            });
            $('#div-water-source #water-source-table .water_source_type option[value=' + id + ']').remove();
            $('#modal-add-new-vid-type-water-source').find('#type_water_source_for_edit option[value=' + id + ']').remove(); //edit select
            $('#modal-add-new-vid-type-water-source').find('#type_water_source_for_delete option[value=' + id + ']').remove();
            toastr.success('Тип был удален из БД', 'Info:', {timeOut: 5000});
            /* refresh update select */
            $('#modal-add-new-vid-type-water-source').find('#type_water_source_for_edit').trigger("change"); //select edit


            /* refresh delete select */
            $('#modal-add-new-vid-type-water-source').find('#type_water_source_for_delete').trigger("change");
            /* refresh select on form */
            $('#div-water-source #water-source-table .water_source_type').trigger("change"); // on form
        }






        /* add Add new vid of situation first arrival to bd */
        function AddSitFa() {//add in modal
            $.ajax({
                dataType: "json",
                url: '{{ base_url('/dones/add_sit_fa_ajax')}}',
                method: 'POST',
                data: {
                    name: $('#modal-add-new-vid-situation').find('#new_sit_fa').val()
                }
            }).done(function (data) {

                if (data.is_success === 1) {
                    $('#situation_first_arrival_id').append('<option value="' + data.id + '">' + data.name + '</option>');
                    $('#situation_first_arrival_id').trigger("change");
                    $('#sit_fa_for_edit').append('<option value="' + data.id + '">' + data.name + '</option>');
                    $('#sit_fa_for_edit').trigger("change");
                    $('#sit_fa_for_delete').append('<option value="' + data.id + '">' + data.name + '</option>');
                    $('#sit_fa_for_delete').trigger("change");
                    $('#modal-add-new-vid-situation').find('#new_si_fa').val('');
                    $('.md-close').click();
                    toastr.success(data.message, 'Успех:', {timeOut: 5000});
                } else {
                    toastr.warning(data.message, 'Внимание:', {timeOut: 5000});
                }
            });
        }



        /* edit situation first arrival to bd */
        function EditSitFa() {//edit in modal

            var id_edit = $('#modal-add-new-vid-situation').find('#sit_fa_for_edit').val();
            $.ajax({
                dataType: "json",
                url: '{{ base_url('/dones/edit_sit_fa_ajax')}}',
                method: 'POST',
                data: {
                    name: $('#modal-add-new-vid-situation').find('#new_name_sit_fa').val(),
                    id_edit: id_edit
                }
            }).done(function (data) {

                if (data.is_success === 1) {

                    /*  set data*/
                    $('#modal-add-new-vid-situation #sit_fa_for_edit option[value=' + id_edit + ']').text(data.name); //select edit
                    $('#modal-add-new-vid-situation').find('#sit_fa_for_delete option[value=' + id_edit + ']').text(data.name); //select delete
                    $('#situation_first_arrival_id option[value=' + id_edit + ']').text(data.name); //select on form

                    /* refresh update select */
                    $('#modal-add-new-vid-situation').find('#sit_fa_for_edit').select2('destroy');
                    $('#modal-add-new-vid-situation').find('#sit_fa_for_edit').select2();
                    /* refresh delete select */
                    $('#modal-add-new-vid-situation').find('#sit_fa_for_delete').select2('destroy');
                    $('#modal-add-new-vid-situation').find('#sit_fa_for_delete').select2();
                    /* refresh select on form */
                    $('#situation_first_arrival_id').select2('destroy');
                    $('#situation_first_arrival_id').select2({
                        placeholder: "Выберите из списка",
                        allowClear: true,
                        "language": {
                            "noResults": function () {
                                return "Ничего не найдено";
                            }
                        }
                    });
                    $('#modal-add-new-vid-situation #new_name_sit_fa').val('');
                    $('.md-close').click();
                    toastr.success(data.message, 'Успех:', {timeOut: 5000});
                } else {
                    toastr.warning(data.message, 'Внимание:', {timeOut: 5000});
                }
            });
        }



        /* delete situation first arrival from bd */
        function deleteSitFa() {//delete in modal

            var id = $('#modal-add-new-vid-situation').find('#sit_fa_for_delete').val();
            $.ajax({
                dataType: "json",
                url: '{{ base_url('/dones/delete_sit_fa_ajax')}}',
                method: 'POST',
                data: {
                    id: id
                }
            });
            $('#situation_first_arrival_id option[value=' + id + ']').remove();
            $('#modal-add-new-vid-situation').find('#sit_fa_for_edit option[value=' + id + ']').remove(); //edit select
            $('#modal-add-new-vid-situation').find('#sit_fa_for_delete option[value=' + id + ']').remove();
            toastr.success('Тип был удален из БД', 'Info:', {timeOut: 5000});
            /* refresh update select */
            $('#modal-add-new-vid-situation').find('#sit_fa_for_edit').trigger("change"); //select edit


            /* refresh delete select */
            $('#modal-add-new-vid-situation').find('#sit_fa_for_delete').trigger("change");
            /* refresh select on form */
            $('#situation_first_arrival_id').trigger("change"); // on form
        }




        function notEnvolve(what, t) {
            var is_check = $(t).is(":checked");
            if (is_check === true) {

                $('#' + what).find('.card-body').hide();
                if (what === 'div-silymchs') {// silymchs - don't show serach cars
                    $('#' + what).find('#a-search-str-cars').hide();
                    $('#' + what).find('#a-refresh-silymchs').hide();
                }

                if (what === 'div-str') {// str - don't show serach str
                    $('#' + what).find('#a-search-str').hide();
                    $('#' + what).find('.refresh-str').hide();
                }

                if (what === 'div-informing') {// informing - don't show get dolj
                    $('#' + what).find('.dolj-add').hide();
                    $('#' + what).find('#a-refresh-informing').hide();
                }

                if (what === 'div-innerservice') {// innerservice
                    $('#' + what).find('#a-refresh-innerservice').hide();
                }

                if (what === 'div-trunks') {// wide table for trunks block
                    $('#' + what).find('#trunks_is_wide_table').prop('disabled', true);
                    $('#' + what).find('#trunks_is_wide_table').prop('checked', false);
                    $('#' + what).find('#a-refresh-trunks').hide();
                    hide_actions_ls();
                }

            } else {

                $('#' + what).find('.card-body').show();
                if (what === 'div-silymchs') {// silymchs - don't show serach cars
                    $('#' + what).find('#a-search-str-cars').show();
                    $('#' + what).find('#a-refresh-silymchs').show();
                }


                if (what === 'div-str') {// str - don't show serach str
                    $('#' + what).find('#a-search-str').show();
                    $('#' + what).find('.refresh-str').show();
                }


                if (what === 'div-trunks') {// wide table for trunks block
                    $('#' + what).find('#trunks_is_wide_table').prop('disabled', false);
                    $('#' + what).find('#a-refresh-trunks').show();
                }

                if (what === 'div-informing') {// informing - don't show get dolj
                    $('#' + what).find('.dolj-add').show();
                    $('#' + what).find('#a-refresh-informing').show();
                }

                if (what === 'div-innerservice') {// innerservice
                    $('#' + what).find('#a-refresh-innerservice').show();
                }
            }

        }

        {%if is_edit_dones is defined and is_edit_dones == 1 and dones is defined and dones.is_not_involved_silymchs == 1 %}
            $('#div-silymchs').find('.card-body').hide();
            $('#div-silymchs').find('#a-search-str-cars').hide();
            $('#div-silymchs').find('#a-refresh-silymchs').hide();
        {%endif%}
        {%if is_edit_dones is defined and is_edit_dones == 1 and dones is defined and dones.is_not_involved_str == 1 %}
            $('#div-str').find('.card-body').hide();
            $('#div-str').find('#a-search-str').hide();
            $('#div-str').find('.refresh-str').hide();
        {%endif%}
        {%if is_edit_dones is defined and is_edit_dones == 1 and dones is defined and dones.is_not_involved_innerservice == 1 %}
            $('#div-innerservice').find('.card-body').hide();
            $('#div-silymchs').find('#a-refresh-innerservice').hide();
        {%endif%}
        {%if is_edit_dones is defined and is_edit_dones == 1 and dones is defined and dones.is_not_involved_informing == 1 %}
            $('#div-informing').find('.card-body').hide();
            $('#div-silymchs').find('#a-refresh-informing').hide();
        {%endif%}
        {%if is_edit_dones is defined and is_edit_dones == 1 and dones is defined and dones.is_not_involved_trunks == 1 %}
            $('#div-trunks').find('.card-body').hide();
            $('#div-silymchs').find('#a-refresh-trunks').hide();
        {%endif%}


            $(document).ready(function () {
                $('body').on('change', '#trunks_is_wide_table', function (e) {

                    e.preventDefault();
                    var is_check = $(this).is(":checked");
                    var actions_ls = $('.actions_ls_btn_trunks');
                    var actions_ls_field = $('.actions_ls_trunks');
                    if (is_check === true) {
                        show_actions_ls();
                    } else {
                        hide_actions_ls();
                    }

                    // return false;
                });
            });
            function hide_actions_ls() {
                var actions_ls = $('.actions_ls_btn_trunks');
                var actions_ls_field = $('.actions_ls_trunks');
                actions_ls.addClass('hide');
                actions_ls_field.addClass('hide');
            }
            function show_actions_ls() {
                var actions_ls = $('.actions_ls_btn_trunks');
                var actions_ls_field = $('.actions_ls_trunks');
                actions_ls.removeClass('hide');
            }


            $('body').on('click', '#createStandart .accordion .dt-class', function (e) {

                e.preventDefault();
                var arr = [];
                var inpt = $('#createStandart input[name="settings_accordion"]');
                var tabs = $('form#createStandart .accordion .accordion-title');
                $(tabs).each(function (index, value) {
                    if ($(this).hasClass('is-collapsed')) {
                    } else {
                        var name = $(this).attr('aria-controls');
                        arr.push(name);
                    }
                });
                inpt.val(arr);
            });
        {#
                    $('form#createStandart').submit(function(e){

                 // Запрещаем стандартное поведение для кнопки submit
                 e.preventDefault();

                 var data=$('#form-sd-media').serializeArray();


            });#}



        {#                $(document).ready(function () {
                            $('form#createStandart textarea').keydown(function (event) {
                                if (event.keyCode == 13) {
                                    event.preventDefault();
                                    return true;
                                }
                            });#}

        {#                $('form#createStandart textarea').keydown(function (event) {
                                if (event.keyCode == 13) {
                                    event.preventDefault();
                                    return false;
                                }
                            });#}

                                $(document).on("keypress", ":input:not(textarea)", function (event) {
                                    return event.keyCode != 13;
                                });
                                /*  add default doljnosty */
                                $('body').on('click', '#btn-add-dolj', function (event) {

                                    var url = '{{base_url('/dones/get_dolj')}}';
                                    $('#preload-update-data-search-rig').css('display', 'block');
                                    $('body').css('opacity', 0.5);
                                    $.post(url, {}, function (res) {


                                        if (parseInt(JSON.parse(res)['is_error']) === 0) {


                                            $(JSON.parse(res)['result']).each(function (index, val) {

                                                $(val).each(function (index_1, value) {

                                                    $('#informing-block-div #div-informing').find('#add-row-informing').trigger('click');
                                                    var $row = $('#informing-block-div #div-informing .table tbody').find('.informing_row:last');
                                                    $row.find('td').find('.informing_fio').val(value.fio);
                                                });
                                            });
                                            /*  delete empty first row*/
                                            $('#informing-block-div #div-informing').find('.informing_fio').each(function (i, v) {
                                                var id_row = ($(this).closest('.informing_row')).attr('id');
                                                var $row_check = $('#informing-block-div #div-informing .table tbody').find('#' + id_row);
                                                if ($row_check.find('td').find('.informing_fio').val() === '') {
                                                    $row_check.remove();
                                                }
                                            });
                                            $('#preload-update-data-search-rig').css('display', 'none');
                                            $('body').css('opacity', 1);
                                            toastr.success('Данные по должностям успешно получены', 'Успех!', {progressBar: true, timeOut: 2500});
                                            $('#modal-dolj-add').css('opacity', '');
                                            $('#modal-dolj-add').click();
                                        } else {

                                            $('body').css('opacity', 1);
                                            toastr.error('Информация не найдена', 'Ошибка!', {progressBar: true, timeOut: 2500});
                                        }
                                    });
                                });




                                $('body').on('change', '#is_owner_multi', function (e) {

                                    e.preventDefault();
                                    var is_multi = $(this).is(':checked');
                                    var descr = $('.div_owner_multi_descr');
                                    if (is_multi) {
                                        descr.removeClass('hide');
                                        descr.removeClass('show');
                                        descr.addClass('show');
                                    } else {
                                        descr.removeClass('hide');
                                        descr.removeClass('show');
                                        descr.addClass('hide');
                                    }
                                    setPreviewOwner();
                                });
                                $('body').on('change', '#is_owner_multi_law', function (e) {

                                    e.preventDefault();
                                    var is_multi = $(this).is(':checked');
                                    var descr = $('.div_owner_multi_descr_law');
                                    if (is_multi) {
                                        descr.removeClass('hide');
                                        descr.removeClass('show');
                                        descr.addClass('show');
                                    } else {
                                        descr.removeClass('hide');
                                        descr.removeClass('show');
                                        descr.addClass('hide');
                                    }
                                    setPreviewLawFace();
                                });
                                $('body').on('change', '#is_likv_before_arrival', function (e) {

                                    e.preventDefault();
                                    if ($(this).is(':checked')) {

                                        $('#accordion3').find('input[name="time_loc"]').val('');
                                        $('#accordion3').find('input[name="time_loc"]').prop('disabled', true);
                                        $('#accordion3').find('input[name="time_likv"]').val('');
                                        $('#accordion3').find('input[name="time_likv"]').prop('disabled', true);
                                        $('#trunks_data-block-div table').find('.trunks_row .time_loc_trunks').val('');
                                        $('#trunks_data-block-div table').find('.trunks_row .time_loc_trunks').prop('disabled', true);
                                        $('#trunks_data-block-div table').find('.trunks_row .time_likv_trunks').val('');
                                        $('#trunks_data-block-div table').find('.trunks_row .time_likv_trunks').prop('disabled', true);
                                    } else {

                                        $('#accordion3').find('input[name="time_loc"]').prop('disabled', false);
                                        $('#accordion3').find('input[name="time_likv"]').prop('disabled', false);
                                        $('#trunks_data-block-div table').find('.trunks_row .time_loc_trunks').prop('disabled', false);
                                        $('#trunks_data-block-div table').find('.trunks_row .time_likv_trunks').prop('disabled', false);
                                    }


                                });
                                $('body').on('focusout', '#createStandart #middle-block-div input[name="time_loc"]', function (e) {
                                    setTimeLocTrunk();
                                });
                                $('body').on('focusout', '#createStandart #middle-block-div input[name="time_likv"]', function (e) {
                                    setTimeLikvTrunk();
                                });
                                $('#createStandart #middle-block-div input[name="time_loc"]').on('apply.daterangepicker', function (e, picker) {
                                    setTimeLocTrunk();
                                    setTimeLikvTrunk();
                                });
                                $('#createStandart #middle-block-div input[name="time_likv"]').on('apply.daterangepicker', function (e, picker) {
                                    setTimeLocTrunk();
                                    setTimeLikvTrunk();
                                });
                                function setTimeLocTrunk() {
                                    var time = $('#createStandart #middle-block-div input[name="time_loc"]').val();
                                    var date = time;
                                    var new_time = '';
                                    var arr_date = date.split(' ');
                                    if (time !== '') {

                                        var arr_time = arr_date[1].split(':');
                                        new_time = arr_time[0] + ':' + arr_time[1];
                                    }


                                    var tr = $('#trunks_data-block-div table').find('.trunks_row .time_loc_trunks');
                                    tr.each(function () {
                                        $(this).val(new_time);
                                    });
                                }

                                function setTimeLikvTrunk() {
                                    var time = $('#createStandart #middle-block-div input[name="time_likv"]').val();
                                    var date = time;
                                    var new_time = '';
                                    var arr_date = date.split(' ');
                                    if (time !== '') {

                                        var arr_time = arr_date[1].split(':');
                                        new_time = arr_time[0] + ':' + arr_time[1];
                                    }


                                    var tr = $('#trunks_data-block-div table').find('.trunks_row .time_likv_trunks');
                                    tr.each(function () {
                                        $(this).val(new_time);
                                    });
                                }



                                $('body').on('focusout', '#trunks_data-block-div table .trunks_row .time_loc_trunks', function (e) {

                                    var trunk_t = $('#trunks_data-block-div table .trunks_row .time_loc_trunks').val();
                                    var time = $('#createStandart #middle-block-div input[name="time_loc"]').val();
                                    var date = time;
                                    var new_time = '';
                                    var arr_date = date.split(' ');
                                    if (trunk_t !== '' && time !== '') {

                                        var arr_time = arr_date[1].split(':');
                                        new_time = arr_date[0] + ' ' + trunk_t;
                                        if (arr_time.length === 3)
                                            new_time = new_time + ':00';
                                        $('#createStandart #middle-block-div input[name="time_loc"]').val(new_time);
                                    }
                                });
                                $('body').on('focusout', '#trunks_data-block-div table .trunks_row .time_likv_trunks', function (e) {
                                    var trunk_t = $('#trunks_data-block-div table .trunks_row .time_likv_trunks').val();
                                    var time = $('#createStandart #middle-block-div input[name="time_likv"]').val();
                                    var date = time;
                                    var new_time = '';
                                    var arr_date = date.split(' ');
                                    if (trunk_t !== '' && time !== '') {

                                        var arr_time = arr_date[1].split(':');
                                        new_time = arr_date[0] + ' ' + trunk_t;
                                        if (arr_time.length === 3)
                                            new_time = new_time + ':00';
                                        $('#createStandart #middle-block-div input[name="time_likv"]').val(new_time);
                                    }
                                });




                                $('body').on('click', '#btn-add-list-disp', function (event) {


                                    var selected = $('#modal-list-disp #id_disp option:selected');
                                    if (selected.val() !== '') {

                                        $('#createStandart input[name="disp_take_msg"]').val(selected.val());

                                        $('#modal-list-disp').click();
                                    }
                                });


                                $('body').on('change', '#individual-face-div #id_owner_category', function (event) {


                                if (parseInt($(this).val()) === {{id_owner_dead}}) {
//alert($(this).val());
                                $('#individual-face-div #owner_place_life_div label').text('Где проживал');
                                        $('#individual-face-div #owner_position_div label').text('Кем работал');
                                        $('#individual-face-div #owner_job_div label').text('Где работал');
                                        $('#individual-face-div #owner_is_uhet_div label').text('Состоял на учете профилактики');
                                }
                                else{
                                $('#individual-face-div #owner_place_life_div label').text('Место жительства');
                                        $('#individual-face-div #owner_position_div label').text('Должность');
                                        $('#individual-face-div #owner_job_div label').text('Место работы');
                                        $('#individual-face-div #owner_is_uhet_div label').text('Состоит на учете профилактики');
                                }
                                }
                                );



                                $('form#createStandart').submit(function (e) {

                                    // Запрещаем стандартное поведение для кнопки submit
                                    e.preventDefault();

                                    var time_msg = $('#createStandart input[name="time_msg"]').val();
                                    var time_loc = $('#createStandart input[name="time_loc"]').val();
                                    var time_likv = $('#createStandart input[name="time_likv"]').val();

                                    var is_likv_before_arrival = $('#createStandart input[name="is_likv_before_arrival"]');




        {%if settings is defined and settings.is_seconds_show is defined and 'yes' in settings.is_seconds_show %}
                var datetime_regex = /(\d\d)\.(\d\d)\.(\d\d\d\d)\s(\d\d):(\d\d):(\d\d)/;
        {%else%}
                var datetime_regex = /(\d\d)\.(\d\d)\.(\d\d\d\d)\s(\d\d):(\d\d)/;
        {%endif%}



                var first_date_arr = datetime_regex.exec(time_msg);
                var second_date_arr = datetime_regex.exec(time_loc);
                var third_date_arr = datetime_regex.exec(time_likv);




        {%if settings is defined and settings.is_seconds_show is defined and 'yes' in settings.is_seconds_show %}

                if (first_date_arr === null) {

                    var nm = 'show-error';
                    var md = $('#' + nm);
                    //$('#a-show-error').click();
                    $('#a-' + nm).click();

                    var field = $('#createStandart input[name="time_msg"]');

                    field.removeClass('error-inpt');
                    field.addClass('error-inpt');

                    //$('#show-error .modal-body p').html('Время сообщения не может быть пустым');
                    md.find('.modal-body p').html('Время сообщения не может быть пустым');

                    $('html, body').animate({
                        scrollTop: (field.offset().top - 125)
                    }, 500);
                    return false;
                } else if (first_date_arr.length !== 7) {
                    //$('#a-show-error').click();

                    var nm = 'show-warning';
                    var md = $('#' + nm);
                    $('#a-' + nm).click();

                    var field = $('#createStandart input[name="time_msg"]');

                    field.removeClass('error-inpt');
                    field.addClass('error-inpt');

                    //$('#show-error .modal-body p').html('Время сообщения должно быть указано в формате xx.xx.xxxx xx:xx:xx');
                    md.find('.modal-body p').html('Время сообщения должно быть указано в формате xx.xx.xxxx xx:xx:xx');

                    $('html, body').animate({
                        scrollTop: (field.offset().top - 125)
                    }, 500);
                    return false;
                } else if (second_date_arr === null && (is_likv_before_arrival.is(':checked') !== true)) {


                    //$('#a-show-error').click();
                    var nm = 'show-warning';
                    var md = $('#' + nm);
                    $('#a-' + nm).click();

                    var field = $('#createStandart input[name="time_loc"]');

                    field.removeClass('error-inpt');
                    field.addClass('error-inpt');

                    //$('#show-error .modal-body p').html('Время локализации не может быть пустым');
                    md.find('.modal-body p').html('Время локализации не может быть пустым');

                    $('html, body').animate({
                        scrollTop: (field.offset().top - 125)
                    }, 500);
                    return false;
                } else if (second_date_arr !== null && second_date_arr.length !== 7) {
                    //$('#a-show-error').click();
                    var nm = 'show-warning';
                    var md = $('#' + nm);
                    $('#a-' + nm).click();

                    var field = $('#createStandart input[name="time_loc"]');

                    field.removeClass('error-inpt');
                    field.addClass('error-inpt');

                    //$('#show-error .modal-body p').html('Время локализации должно быть указано в формате xx.xx.xxxx xx:xx:xx');
                    md.find('.modal-body p').html('Время локализации должно быть указано в формате xx.xx.xxxx xx:xx:xx');

                    $('html, body').animate({
                        scrollTop: (field.offset().top - 125)
                    }, 500);
                    return false;
                } else if (third_date_arr === null && (is_likv_before_arrival.is(':checked') !== true)) {

                    //$('#a-show-error').click();
                    var nm = 'show-warning';
                    var md = $('#' + nm);
                    $('#a-' + nm).click();


                    var field = $('#createStandart input[name="time_likv"]');

                    field.removeClass('error-inpt');
                    field.addClass('error-inpt');

                    //$('#show-error .modal-body p').html('Время ликвидации не может быть пустым');
                    md.find('.modal-body p').html('Время ликвидации не может быть пустым');

                    $('html, body').animate({
                        scrollTop: (field.offset().top - 125)
                    }, 500);
                    return false;
                } else if (third_date_arr !== null && third_date_arr.length !== 7) {
                    //$('#a-show-error').click();
                    var nm = 'show-warning';
                    var md = $('#' + nm);
                    $('#a-' + nm).click();

                    var field = $('#createStandart input[name="time_likv"]');

                    field.removeClass('error-inpt');
                    field.addClass('error-inpt');

                    //$('#show-error .modal-body p').html('Время ликвидации должно быть указано в формате xx.xx.xxxx xx:xx:xx');
                    md.find('.modal-body p').html('Время ликвидации должно быть указано в формате xx.xx.xxxx xx:xx:xx');

                    $('html, body').animate({
                        scrollTop: (field.offset().top - 125)
                    }, 500);
                    return false;
                } else {
                    var msg_datetime = new Date(first_date_arr[3], first_date_arr[2], first_date_arr[1], first_date_arr[4], first_date_arr[5], first_date_arr[6]);
                    if (is_likv_before_arrival.is(':checked') !== true) {
                        var loc_datetime = new Date(second_date_arr[3], second_date_arr[2], second_date_arr[1], second_date_arr[4], second_date_arr[5], second_date_arr[6]);
                        var likv_datetime = new Date(third_date_arr[3], third_date_arr[2], third_date_arr[1], third_date_arr[4], third_date_arr[5], third_date_arr[6]);
                    } else {
                        var loc_datetime = null;
                        var likv_datetime = null;

                    }
                }


        {%else%}



                if (first_date_arr === null) {

                    var nm = 'show-error';
                    var md = $('#' + nm);
                    //$('#a-show-error').click();
                    $('#a-' + nm).click();

                    var field = $('#createStandart input[name="time_msg"]');

                    field.removeClass('error-inpt');
                    field.addClass('error-inpt');

                    md.find('.modal-body p').html('Время сообщения не может быть пустым');
                    //md.find('.modal-body p').html('Время сообщения не может быть пустым');

                    $('html, body').animate({
                        scrollTop: (field.offset().top - 125)
                    }, 500);
                    return false;
                } else if (first_date_arr.length !== 6) {

                    $('#a-show-error').click();

                    var field = $('#createStandart input[name="time_msg"]');

                    field.removeClass('error-inpt');
                    field.addClass('error-inpt');

                    $('#show-error .modal-body p').html('Время сообщения должно быть указано в формате xx.xx.xxxx xx:xx');

                    $('html, body').animate({
                        scrollTop: (field.offset().top - 125)
                    }, 500);
                    return false;
                } else if (second_date_arr === null && (is_likv_before_arrival.is(':checked') !== true)) {

                    //$('#a-show-error').click();

                    var nm = 'show-warning';
                    var md = $('#' + nm);
                    $('#a-' + nm).click();

                    var field = $('#createStandart input[name="time_loc"]');

                    field.removeClass('error-inpt');
                    field.addClass('error-inpt');

                    //$('#show-error .modal-body p').html('Время локализации не может быть пустым');
                    md.find('.modal-body p').html('Время локализации не может быть пустым');

                    $('html, body').animate({
                        scrollTop: (field.offset().top - 125)
                    }, 500);
                    return false;
                } else if (second_date_arr !== null && second_date_arr.length !== 6) {
                    //$('#a-show-error').click();

                    var nm = 'show-warning';
                    var md = $('#' + nm);
                    $('#a-' + nm).click();

                    var field = $('#createStandart input[name="time_loc"]');

                    field.removeClass('error-inpt');
                    field.addClass('error-inpt');

                    //$('#show-error .modal-body p').html('Время локализации должно быть указано в формате xx.xx.xxxx xx:xx');

                    md.find('.modal-body p').html('Время локализации должно быть указано в формате xx.xx.xxxx xx:xx');

                    $('html, body').animate({
                        scrollTop: (field.offset().top - 125)
                    }, 500);
                    return false;
                } else if (third_date_arr === null && (is_likv_before_arrival.is(':checked') !== true)) {

                    //$('#a-show-error').click();

                    var nm = 'show-warning';
                    var md = $('#' + nm);
                    $('#a-' + nm).click();

                    var field = $('#createStandart input[name="time_likv"]');

                    field.removeClass('error-inpt');
                    field.addClass('error-inpt');

                    //$('#show-error .modal-body p').html('Время ликвидации не может быть пустым');
                    md.find('.modal-body p').html('Время ликвидации не может быть пустым');

                    $('html, body').animate({
                        scrollTop: (field.offset().top - 125)
                    }, 500);
                    return false;
                } else if (third_date_arr !== null && third_date_arr.length !== 6) {
                    //$('#a-show-error').click();
                    var nm = 'show-warning';
                    var md = $('#' + nm);
                    $('#a-' + nm).click();

                    var field = $('#createStandart input[name="time_likv"]');

                    field.removeClass('error-inpt');
                    field.addClass('error-inpt');

                    //$('#show-error .modal-body p').html('Время ликвидации должно быть указано в формате xx.xx.xxxx xx:xx');
                    md.find('.modal-body p').html('Время ликвидации должно быть указано в формате xx.xx.xxxx xx:xx');


                    $('html, body').animate({
                        scrollTop: (field.offset().top - 125)
                    }, 500);
                    return false;
                } else {
                    var msg_datetime = new Date(first_date_arr[3], first_date_arr[2], first_date_arr[1], first_date_arr[4], first_date_arr[5]);
                    if (is_likv_before_arrival.is(':checked') !== true) {
                        var loc_datetime = new Date(second_date_arr[3], second_date_arr[2], second_date_arr[1], second_date_arr[4], second_date_arr[5]);
                        var likv_datetime = new Date(third_date_arr[3], third_date_arr[2], third_date_arr[1], third_date_arr[4], third_date_arr[5]);
                    } else {
                        var loc_datetime = null;
                        var likv_datetime = null;

                    }
                }



        {%endif%}


                if (loc_datetime !== null && msg_datetime.getTime() > loc_datetime.getTime()) {

                    $('#a-show-error').click();

                    var field = $('#createStandart input[name="time_msg"]');

                    field.removeClass('error-inpt');
                    field.addClass('error-inpt');

                    $('#show-error .modal-body p').html('Время сообщения не может превышать времени локализации');

                    $('html, body').animate({
                        scrollTop: (field.offset().top - 125)
                    }, 500);
                    return false;

                } else {
                    var field = $('#createStandart input[name="time_msg"]');
                    field.removeClass('error-inpt');
                }


                if (likv_datetime !== null && msg_datetime.getTime() > likv_datetime.getTime()) {


                    $('#a-show-error').click();

                    var field = $('#createStandart input[name="time_msg"]');

                    field.removeClass('error-inpt');
                    field.addClass('error-inpt');

                    $('#show-error .modal-body p').html('Время сообщения не может превышать времени ликвидации');

                    $('html, body').animate({
                        scrollTop: (field.offset().top - 125)
                    }, 500);
                    return false;


                } else {
                    var field = $('#createStandart input[name="time_msg"]');
                    field.removeClass('error-inpt');
                }

                if ((loc_datetime !== null && likv_datetime !== null) && loc_datetime.getTime() > likv_datetime.getTime()) {

                    $('#a-show-error').click();

                    var field = $('#createStandart input[name="time_loc"]');

                    field.removeClass('error-inpt');
                    field.addClass('error-inpt');

                    $('#show-error .modal-body p').html('Время локализации не может превышать времени ликвидации');

                    $('html, body').animate({
                        scrollTop: (field.offset().top - 125)
                    }, 500);
                    return false;

                } else {
                    var field = $('#createStandart input[name="time_loc"]');
                    field.removeClass('error-inpt');
                }

                //later you decide you want to submit
                $(this).unbind('submit').submit();

            });


            /* continue in warning modal */
            $('body').on('click', '#show-warning .btn-continue', function (e) {

                var form = $('#createStandart');
                form.unbind('submit').submit();
            });


            $('body').on('click', '#btn-refresh-silymchs', function (e) {

                e.preventDefault();
                var id_rig_current = $('#createStandart input[name="id_rig_current"]').val();

                var data = {'id_rig': id_rig_current, 'sign': 1};
                var url = '{{base_url('/dones/refresh_silymchs')}}';

                if (id_rig_current !== '') {
                    $.post(url, data, function (res) {
                        if (parseInt(JSON.parse(res)['is_data']) === 1) {

                            $("#silymchs-block-div").html('');
                            $("#silymchs-block-div").html(JSON.parse(res)['silymchs']);
                            $('#modal-refresh-silymchs').click();

                            toastr.success('Данные успешно обновлены', 'Успех:', {timeOut: 5000});

                        } else {
                            toastr.error('Выезд не найден', 'Ошибка:', {timeOut: 5000});
                        }
                    });
                } else {
                    toastr.error('Выезд не найден', 'Ошибка:', {timeOut: 5000});
                }

            });

            $('body').on('click', '#btn-refresh-trunks', function (e) {

                e.preventDefault();
                var id_rig_current = $('#createStandart input[name="id_rig_current"]').val();

                var data = {'id_rig': id_rig_current, 'sign': 2};
                var url = '{{base_url('/dones/refresh_silymchs')}}';

                if (id_rig_current !== '') {
                    $.post(url, data, function (res) {
                        if (parseInt(JSON.parse(res)['is_data']) === 1) {

                            $("#trunks_data-block-div").html('');
                            $("#trunks_data-block-div").html(JSON.parse(res)['trunks_block']);
                            $('#modal-refresh-trunks').click();

                            toastr.success('Данные успешно обновлены', 'Успех:', {timeOut: 5000});

                        } else {
                            toastr.error('Выезд не найден', 'Ошибка:', {timeOut: 5000});
                        }
                    });
                } else {
                    toastr.error('Выезд не найден', 'Ошибка:', {timeOut: 5000});
                }

            });




            $('body').on('click', '#btn-refresh-innerservice', function (e) {

                e.preventDefault();
                var id_rig_current = $('#createStandart input[name="id_rig_current"]').val();

                var data = {'id_rig': id_rig_current, 'sign': 3};
                var url = '{{base_url('/dones/refresh_silymchs')}}';

                if (id_rig_current !== '') {
                    $.post(url, data, function (res) {
                        if (parseInt(JSON.parse(res)['is_data']) === 1) {


                            $("#innerservice-block-div").html('');
                            $("#innerservice-block-div").html(JSON.parse(res)['innerservice']);
                            $('#modal-refresh-innerservice').click();

                            toastr.success('Данные успешно обновлены', 'Успех:', {timeOut: 5000});


                            $('.select2-single').select2({
                                placeholder: "Выберите из списка",
                                allowClear: true,
                                "language": {
                                    "noResults": function () {
                                        return "Ничего не найдено";
                                    }
                                }
                            });

                            $('.select2-single').trigger("change");



                        } else {
                            toastr.error('Выезд не найден', 'Ошибка:', {timeOut: 5000});
                        }
                    });
                } else {
                    toastr.error('Выезд не найден', 'Ошибка:', {timeOut: 5000});
                }

            });




            $('body').on('click', '#btn-refresh-informing', function (e) {

                e.preventDefault();
                var id_rig_current = $('#createStandart input[name="id_rig_current"]').val();

                var data = {'id_rig': id_rig_current, 'sign': 4};
                var url = '{{base_url('/dones/refresh_silymchs')}}';

                if (id_rig_current !== '') {
                    $.post(url, data, function (res) {
                        if (parseInt(JSON.parse(res)['is_data']) === 1) {

                            $("#informing-block-div").html('');
                            $("#informing-block-div").html(JSON.parse(res)['informing']);
                            $('#modal-refresh-informing').click();
                            toastr.success('Данные успешно обновлены', 'Успех:', {timeOut: 5000});

                        } else {
                            toastr.error('Выезд не найден', 'Ошибка:', {timeOut: 5000});
                        }
                    });
                } else {
                    toastr.error('Выезд не найден', 'Ошибка:', {timeOut: 5000});
                }

            });





            $('body').on('click', '#btn-refresh-inf-detail', function (e) {

                e.preventDefault();
                var id_rig_current = $('#createStandart input[name="id_rig_current"]').val();

                var data = {'id_rig': id_rig_current, 'sign': 5};
                var url = '{{base_url('/dones/refresh_silymchs')}}';

                if (id_rig_current !== '') {
                    $.post(url, data, function (res) {
                        if (parseInt(JSON.parse(res)['is_data']) === 1) {

                            $('#createStandart textarea[name="detail_inf"]').val('');
                            $('#createStandart textarea[name="detail_inf"]').val(JSON.parse(res)['detail_inf']);
                            $('#modal-refresh-inf-detail').click();

                            toastr.success('Данные успешно обновлены', 'Успех:', {timeOut: 5000});

                        } else {
                            toastr.error('Выезд не найден', 'Ошибка:', {timeOut: 5000});
                        }
                    });
                } else {
                    toastr.error('Выезд не найден', 'Ошибка:', {timeOut: 5000});
                }

            });


            $('body').on('change', '#is_water_source', function (e) {

                e.preventDefault();
                if ($(this).is(':checked')) {
                    $('#div-water-source').removeClass('hide');
                } else {
                    $('#div-water-source').addClass('hide');
                }
            });


        {%if is_edit_dones is not defined and id_rig_current is defined and rig is defined and rig.hours<1 and rig.start_timer != 0 and rig.during_timer>0%}

            start_timer_time_msg("{{rig.start_timer}}", {{rig.during_timer}});

            {%elseif is_edit_dones is  defined and  is_edit_dones == 1 and dones is defined and is_timer_time_msg is defined and is_timer_time_msg == 1
 and dones.time_msg is not empty and dones.time_msg != '0000-00-00 00:00:00' and
                    time_msg_timer.hours<1 and time_msg_timer.start_timer != 0 and time_msg_timer.during_timer>0%}

        {%endif%}


            function playEndTimer() {
                var x = document.getElementById("myAudio");
                x.play();
            }

            function pauseEndTimer() {
                var x = document.getElementById("myAudio");

                x.pause();
            }

    </script>


{% endblock %}



